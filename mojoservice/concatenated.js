var MojoLoader=require("mojoloader.js");MojoLoader.root=__dirname;var IMPORTS=MojoLoader.require({name:"foundations",version:"1.0"},{name:"foundations.json",version:"1.0"}),Foundations=IMPORTS.foundations,Json=IMPORTS["foundations.json"],Class=Foundations.Class,Future=Foundations.Control.Future,Activity=Foundations.Control.Activity,Assert=Foundations.Assert,PalmCall=Foundations.Comms.PalmCall; Function.prototype.bind||(Function.prototype.bind=function(a){var b=this;if(1==arguments.length)return function(){b.apply(a,arguments)};var c=Array.prototype.slice.call(arguments,1);return function(){b.apply(a,c.concat(Array.prototype.slice.call(arguments,0)))}}); exports.AppController=Class.create({initialize:function(a,b){a||(a=[]);b||(b=root);this.assistants=b;this.parseArguments(a);this.assistant=this._createAppAssistant();this.assistant.controller=this;try{this.config=(this.assistant.getConfiguration||this._readConfiguration)()}catch(c){throw console.error("MojoService: error during AppController configuration: "+c),c;}if(!this.config)throw Error("No configuration information - missing services.json?");if(!this.config.services)throw Error("No services defined in configuration"); this._configSchema=JSON.parse(Foundations.Comms.loadFile(MojoLoader.root+"/schema/services-schema.json"));var d=Json.Schema.validate(this.config,this._configSchema);if(!d.valid){console.error("Service configuration failed validation");for(var e=0;e<d.errors.length;e++){var h=d.errors[e];console.error(h.property+" : "+h.message)}throw Error("configuration failed validation");}try{this.serviceFactory=this.assistant.createServiceAssistant?this.assistant:this}catch(f){throw console.error("MojoService: error during serviceFactory creation: "+ f),f;}if(this.assistant.setup)try{this.assistant.setup()}catch(g){throw console.error("MojoService: error during assistant setup: "+g),g;}this._timeout=this.assistant.commandTimeout||this.config.commandTimeout||this._defaultCommandTimeout;this._bindServices(this.config.services);var k=this;ActivityManager.setTimeout(1E3*(this.assistant.activityTimeout||this.config.activityTimeout||this._defaultActivityTimeout),function(){console.log("MojoService: activityTimeout triggered");k.timeoutsEnabled?k.shutdown(!0): console.error("timeouts disabled, doing nothing")})},parseArguments:function(a){for(var b=0;b<a.length;++b)"--disable-timeouts"===a[b]&&(console.warn("Idle and command timeouts disabled by command line option."),this.timeoutsEnabled=!1)},shutdown:function(a){this._services.forEach(function(a){a.cleanup()});if(this.assistant.cleanup)try{this.assistant.cleanup()}catch(b){console.error("MojoService: error during assistant cleanup: "+b)}a&&(console.log("MojoService: quitting"),"function"===typeof quit? quit():root.process.exit())},_createAppAssistant:function(a){return this.assistants.AppAssistant?new this.assistants.AppAssistant(a):{}},_bindServices:function(a){this._services=[];var b=this,c={};a.forEach(function(a){if(void 0===c[a.name])b._services.push(new ServiceController(b,a)),c[a.name]=!0;else throw Error('Config error: Two services named "'+a.name+'"');})},_readConfiguration:function(){try{return JSON.parse(Foundations.Comms.loadFile("services.json"))}catch(a){console.error("MojoService: error reading AppController configuration: "+ a)}},_defaultActivityTimeout:5,_defaultCommandTimeout:60,timeoutsEnabled:!0,createServiceAssistant:function(a){return a.assistant?new this.assistants[a.assistant]:{}}});var MethodDispatcher,stringEndsWith=Foundations.StringUtils.endsWith; if("undefined"!==typeof require){var palmbus=require("palmbus");MethodDispatcher=Class.create({initialize:function(a,b){var c=this;this._handle=new palmbus.Handle(a,b);this.functions={};this._handle.addListener("request",function(a){c._dispatchMessage(a)})},registerMethod:function(a,b,c){var d=this._normalizeMethodPath(a,b);this._handle.registerMethod(a,b);this.functions[d]=c},subscriptionAdd:function(a,b){this._handle.subscriptionAdd(a,b)},setCancelHandler:function(a){this._cancelFunction&&this._handle.removeListener("cancel", this._cancelFunction);this._cancelFunction=a;this._handle.addListener("cancel",a)},registerWithPalmCall:function(){PalmCall.register(this._handle)},getHandle:function(){return this._handle},unregister:function(){this._handle.unregister()},_normalizeMethodPath:function(a,b){stringEndsWith(a,"/")||(a+="/");return a+b},_dispatchMessage:function(a){var b=this._normalizeMethodPath(a.category(),a.method()),c=this.functions[b];c&&(ActivityManager.resetTimer(b),c(a))}})}else MethodDispatcher=Class.create({initialize:function(a, b){this._handle=new webOS.Handle(a,b)},registerMethod:function(a,b,c){this._handle.registerMethod(a,b,c)},subscriptionAdd:function(a,b){this._handle.subscriptionAdd(a,b)},setCancelHandler:function(a){this._handle.setCancelHandler(a)},registerWithPalmCall:function(){PalmCall.register(this._handle)},getHandle:function(){return this._handle}}); var ServiceController=exports.ServiceController=Class.create({initialize:function(a,b){this._subscriptions={};this.application=a;this.timeoutsEnabled=a.timeoutsEnabled;this.config=b;this.name=b.name;this.assistant=a.serviceFactory.createServiceAssistant(b);if(!this.assistant)throw Error("Cannot find service assistant '"+b.assistant+"'");this.assistant.controller=this;this._privateDispatcher=new MethodDispatcher(this.name,!1);console.log("Private Bus Access: "+this.config.privatebus);this.config.privatebus|| this.name.match(/^com\.palm\./)?(console.log("Sending on private bus"),this._privateDispatcher.registerWithPalmCall()):(console.log("sending on public bus"),this._publicDispatcher=new MethodDispatcher(this.name,!0),this._publicDispatcher.registerWithPalmCall());this.commandFactory=this.assistant.createCommandAssistant?this.assistant:this;this.commandRunner=this.assistant.runCommand?this.assistant:this;var c=!1;this.config.globalized&&(c=!0);c?(this._setupFuture=PalmCall.call("palm://com.palm.systemservice", "getPreferences",{keys:["locale"]}),this._setupFuture.then(function(a){exports.locale=a.result.locale.languageCode+"_"+a.result.locale.countryCode;exports.region=a.result.locale.countryCode;a.nest(PalmCall.call("palm://com.palm.systemservice/time","getSystemTime",{}).then(function(a){try{exports.TZ=a.result.TZ,exports.offset=a.result.offset,exports.timezone=a.result.timezone}catch(b){console.error("timezone fetch failed. error was: ",b)}a.result=!0}))})):this._setupFuture=new Future(!0);this.assistant.setup&& this._setupFuture.then(this,function(a){a.getResult();console.log(">>>Running ServiceAssistant setup");a=this.assistant.setup();void 0===a&&(console.log(">>>Returned undefined. Setting setupFuture result"),a=!0);return a});this._timeout=this.assistant.commandTimeout||b.commandTimeout||a._timeout;(c=this.assistant.getConfiguration?this.assistant.getConfiguration():b.commands)||console.log("No commands defined for service '",this.name+"'");this._bindCommands(c);console.log("setup finished "+Date.now())}, cleanup:function(){this._privateDispatcher&&(this._privateDispatcher.unregister(),delete this._privateDispatcher);this._publicDispatcher&&(this._publicDispatcher.unregister(),delete this._publicDispatcher);if(this.assistant.cleanup)try{this.assistant.cleanup()}catch(a){console.error("MojoService: error during service assistant cleanup: "+a)}},_bindCommands:function(a){this.commands={};var b=this;a.forEach(function(a){if(b.commands[a.name])throw Error('Config error: more than one command named "'+ a.name+'" in service "'+b.name+'"');b.commands[a.name]=a;b._privateDispatcher&&b._privateDispatcher.registerMethod(a.category||"",a.name,b._dispatchCommand.bind(b,!1,a));a["public"]&&(b._publicDispatcher||(b._publicDispatcher=new MethodDispatcher(b.name,!0)),b._publicDispatcher.registerMethod(a.category||"",a.name,b._dispatchCommand.bind(b,!0,a)))});this._privateDispatcher&&(this._privateDispatcher.registerMethod("","__info",this._infoCommand.bind(this,!1)),this._privateDispatcher.registerMethod("", "__quit",this._quitCommand.bind(this)),this._privateDispatcher.registerMethod("","__gc",this._gcCommand.bind(this)),this._privateDispatcher.setCancelHandler(this._subscriptionCancelHandler.bind(this)));this._publicDispatcher&&(this._publicDispatcher.registerMethod("","__info",this._infoCommand.bind(this,!0)),this._publicDispatcher.registerMethod("","__quit",this._quitCommand.bind(this)),this._publicDispatcher.registerMethod("","__gc",this._gcCommand.bind(this)),this._publicDispatcher.setCancelHandler(this._subscriptionCancelHandler.bind(this)))}, _dispatchCommand:function(a,b,c){console.log("_dispatchCommand");var d=new CommandController(this,b,a,c);this._setupFuture?this._setupFuture.then(function(a){a.getResult();a.result=!0;d.run()}):d.run()},_infoCommand:function(a,b){for(var c=this.application.config,d={description:c.description},e=Foundations.ObjectUtils.clone(this.config),h=e.commands,f={},g=0;g<h.length;){var k=h[g],l;for(l in{argsSchema:null,returnSchema:null,watchSchema:null,subscribeSchema:null})"string"===typeof k[l]&&(f[k[l]]= c.schemas[k[l]]);a&&!k["public"]?h.splice(g,1):g++}d.services=[e];for(var m in f){d.schemas=f;break}b.respond(JSON.stringify({returnValue:!0,info:d}))},_quitCommand:function(a){var b=this.application;a.respond(JSON.stringify({returnValue:!0}));ActivityManager.setTimeout(100,function(){b.shutdown(!0)})},_gcCommand:function(a){a.respond(JSON.stringify(global.gc?{status:"Collecting garbage",returnValue:!0}:{errorText:"GC not enabled",returnValue:!1}));global.gc&&global.gc()},runCommand:function(a){var b= a.assistant;return a.watch?a.future.now(function(){b.run(a.future,a.watch)}):a.subscribe?a.future.now(function(){b.run(a.future,a.subscribe)}):a.future.now(b,b.run)},createCommandAssistant:function(a){return(a=root[a.assistant])?new a:void 0},subscribeCommand:function(a,b){b.isPublic?this._publicDispatcher.subscriptionAdd(a,b.message):this._privateDispatcher.subscriptionAdd(a,b.message);this._subscriptions[a]=b},unsubscribeCommand:function(a){this._subscriptions[a]=void 0},_subscriptionCancelHandler:function(a){(a= this._subscriptions[a.uniqueToken()])&&a.cancelSubscription()},publicHandle:function(){return this._publicDispatcher.getHandle()},privateHandle:function(){return this._privateDispatcher.getHandle()}}),CommandController=exports.CommandController=Class.create({initialize:function(a,b,c,d,e){this.service=a;this.config=b;this.isPublic=c;this.message=d;this.adoptFailed=!1;if(d)try{this.args=JSON.parse(d.payload())}catch(h){console.error("MojoService: error during message parsing: "+h),this._exception= h}this.args||(this.args=e||{});this.future=new Future;b.watch&&this.args.watch?this.watch=new Future:b.subscribe&&this.args.subscribe&&(this.subscribe=new FutureFactory);if(this.args.$activity){var f=this.args.$activity;this.activity=new Activity;f&&(f.callback&&f.callback.serial)&&(this.activity.serial=f.callback.serial);d&&d.senderServiceName&&"com.palm.activitymanager"===d.senderServiceName()?(console.log("activityManager launched us - adopting activity with serial "+this.activity.serial),this._pendingAdopt= this.activity.adopt(f.activityId).then(this,function(a){console.log("activity adopted");a.exception?(console.error("MojoService failed to adopt activity "+f.activityId+" : "+a.exception),this.adoptFailed=!0,this._exception=a.exception,this._pendingAdopt.result=!1):(console.log("success!"),this.message.respond(JSON.stringify({returnValue:!0})),this._pendingAdopt.result=!0)})):(console.log("app or service launched us - monitoring activity "+f.activityId),this._pendingAdopt=this.activity.monitor(f.activityId).then(this, function(a){console.log("activity monitored");a.exception?(console.error("MojoService failed to monitor activity "+this.args.$activity.activityId+" : "+a.exception),this._exception=a.exception,a.result=!1):a.result=!0}))}else c=ActivityManager.uniqueNameFor(b.name),console.warn("MojoService: no activity passed in, creating "+c),this.activity=new Activity(c,b.description||"no description provided"),this._pendingAdopt=this.activity.start().then(this,function(a){console.log("MojoService: started new activity: "+ this.activity.name);a.setResult(!0)});this.activity.onEvent(this._onActivityEvent.bind(this));ActivityManager.add(this.activity);this.assistant=a.commandFactory.createCommandAssistant(b);this.assistant||(this._exception=Error("Cannot find command assistant '"+b.assistant+"'"),this.assistant={});this.assistant.controller=this;try{this.assistant.setup&&this.assistant.setup(d)}catch(g){console.error("MojoService: error during controller assistant setup: "+g),this._exception=g}this._timeout=this.assistant.commandTimeout|| this.config.commandTimeout||a._timeout},run:function(){this._pendingAdopt?(console.log("deferring command until adopt completes"),this._pendingAdopt.then(this,this._actuallyRun)):this._actuallyRun()},_actuallyRun:function(a){if(this._exception)this.adoptFailed?this._reply("reply",{status:"adopt failed",error:this._exception.toString()}):this._reply("exception",this._exception);else if(a=this._validateWithSchema(this.config.argsSchema,this.args))this._reply("exception",a);else{var b=this,c=this;this._timer= setTimeout(function(){var a="commandTimeout in "+c.service.name+"/"+c.config.name;console.error(a);try{c.assistant.timeoutReceived&&"function"===typeof c.assistant.timeoutReceived&&c.assistant.timeoutReceived(a)}catch(e){console.error(JSON.stringify(e))}c.service.timeoutsEnabled?b.future?b.future.setException(Foundations.Err.create(504,a)):b._reply("exception",{errorCode:504,errorText:a,timeout:!0,commandTimeout:c._timeout}):console.error("Timeouts disabled, doing nothing")},1E3*this._timeout);this.service.commandRunner.runCommand(this).then(this, function(a){this._validateAndReply(this.config.returnSchema,"reply",a)});if(this.watch||this.subscribe)this._subscribe(),this.watch?this.watch.then(this,function(a){this._validateAndReply(this.config.watchSchema,"watch",a)}):this.subscribe&&this.subscribe._activate(this,function(a){this._validateAndReply(this.config.subscribeSchema,"subscribe",a)})}},cleanup:function(){this.message&&delete this.message;this._timer&&(clearTimeout(this._timer),delete this._timer);this._unsubscribe();if(this.activity){if(this.assistant.complete&& "function"===typeof this.assistant.complete)try{this.assistant.complete(this.activity)}catch(a){console.error("MojoService: error during command assistant complete(): "+a),console.error("Trying to complete it myself"),this.activity.complete()}else console.log("completing/unsubscribing activity "+this.activity.name),this.activity.complete();ActivityManager.remove(this.activity);delete this.activity}if(this.assistant.cleanup)try{this.assistant.cleanup()}catch(b){throw console.error("MojoService: error during command assistant cleanup: "+ b),b;}},_validateWithSchema:function(a,b){if(a){"string"===typeof a&&(a=this.service.application.config.schemas[a]);var c=Json.Schema.validate(b,a);if(!c.valid)return{errorText:"Schema validation error",errorCode:400,schemaErrors:c.errors}}},_validateAndReply:function(a,b,c){try{var d=this._validateWithSchema(a,c.result);d?this._reply("exception",d):this._reply(b,c.result)}catch(e){this._reply("exception",{errorText:e.message,errorCode:e.errorCode,exception:e.stack?e.stack:e.toString()})}},_reply:function(a, b){var c=this.message;if(c){this._timer&&(clearTimeout(this._timer),delete this._timer);b=b||{};switch(a){case "reply":b.returnValue=!0;this.watch||this.subscribe||delete this.message;break;case "subscribe":b.returnValue=!0;b.fired=!0;break;case "watch":b.returnValue=!0;b.fired=!0;delete this.message;break;default:b.returnValue=!1,void 0===b.errorCode&&(b.errorCode=-9999,b.errorText="MojoService: no errorCode supplied "+(b.errorText||"")),delete this.message}c.respond(JSON.stringify(b));this.message|| this.cleanup()}},_onActivityEvent:function(a){console.log("Activity event",a);if(a===Activity.Event.yield&&"function"===typeof this.assistant.yield)try{this.assistant.yield(this.activity)}catch(b){throw console.error("MojoService: error during command assistant yield: "+b),b;}else if(this.assistant.activityEvent)try{this.assistant.activityEvent(a)}catch(c){throw console.error("MojoService: error during command assistant activityEvent: "+c),c;}},_subscribe:function(){this._key=this.message.uniqueToken(); this.service.subscribeCommand(this._key,this)},_unsubscribe:function(){this.service.unsubscribeCommand(this._key)},cancelSubscription:function(){this.assistant.cancelSubscription&&this.assistant.cancelSubscription();this.cleanup()}}),ActivityManager={_activities:{},uniqueNameFor:function(){var a=0;return function(b){return b+"_"+a++}}(),haveNoActivities:function(){return 0===Object.keys(this._activities).length},add:function(a){a=a.name;void 0===this._activities[a]?this._activities[a]=1:(console.warn("MojoService.ActivityManager: Added activity "+ a+" twice"),this._activities[a]++);this._enableTimer(!1)},remove:function(a){a=a.name;void 0===this._activities[a]?console.warn("ActivityManager: Removed unregistered activity "+a):(this._activities[a]--,0===this._activities[a]&&delete this._activities[a]);this.haveNoActivities()&&this._enableTimer(!0)},setTimeout:function(a,b){this._timeout=a;this._shutdown=b;this._enableTimer(!0)},resetTimer:function(a){this._timer&&this._enableTimer(!0)},_enableTimer:function(a){this._timer&&(clearTimeout(this._timer), this._timer=void 0);a&&this._shutdown&&(this._timer=setTimeout(this._shutdown,this._timeout))}},FutureFactory=Class.create({initialize:function(){this._pending=[]},get:function(){var a=new Future;this._callback?a.then(this._scope,this._callback):this._pending.push(a);return a},_activate:function(a,b){this._scope=a;for(this._callback=b;void 0!=(p=this._pending.shift());)p.then(a,b)}});
